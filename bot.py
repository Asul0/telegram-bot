import os
import logging
import asyncio
from flask import Flask, request
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackContext, filters

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")

if not TOKEN or not WEBHOOK_URL:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω TOKEN –∏–ª–∏ WEBHOOK_URL!")

# –°–æ–∑–¥–∞–Ω–∏–µ Flask
app = Flask(__name__)

# Telegram Bot
bot_app = (
    Application.builder()
    .token(TOKEN)
    .updater(None)
    .build()
)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: CallbackContext):
    buttons = [["üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫"], ["üìú –ú–µ–Ω—é"], ["üè† –û –Ω–∞—Å"], ["üõé –í—ã–∑–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª"]]
    keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Gourmet Haven!", reply_markup=keyboard)

bot_app.add_handler(CommandHandler("start", start))

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route("/", methods=["GET"])
def home():
    return "Bot is running!", 200

# Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@app.route("/webhook", methods=["POST"])
def handle_webhook():
    try:
        update = Update.de_json(request.get_json(), bot_app.bot)
        asyncio.run(bot_app.process_update(update))
        return "", 200
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Webhook: {e}")
        return "", 500

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
@app.before_first_request
def setup_webhook():
    asyncio.run(set_webhook())

async def set_webhook():
    await bot_app.initialize()
    await bot_app.bot.set_webhook(url=f"{WEBHOOK_URL}/webhook")

# –ó–∞–ø—É—Å–∫ Flask
if __name__ == "__main__":
    port = int(os.getenv("PORT", "8080"))
    app.run(host="0.0.0.0", port=port)
