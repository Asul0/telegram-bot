from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackContext,
    filters,
)
from datetime import datetime, timedelta

# –ú–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
menu = {
    "–ó–∞–∫—É—Å–∫–∏": ["–°—ã—Ä–Ω–∞—è —Ç–∞—Ä–µ–ª–∫–∞ - 800 —Ä—É–±.", "–ë—Ä—É—Å–∫–µ—Ç—Ç–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏ - 450 —Ä—É–±."],
    "–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞": ["–°—Ç–µ–π–∫ –∏–∑ –≥–æ–≤—è–¥–∏–Ω—ã - 1500 —Ä—É–±.", "–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞ - 900 —Ä—É–±."],
    "–î–µ—Å–µ—Ä—Ç—ã": ["–¢–∏—Ä–∞–º–∏—Å—É - 600 —Ä—É–±.", "–ß–∏–∑–∫–µ–π–∫ - 550 —Ä—É–±."],
    "–ù–∞–ø–∏—Ç–∫–∏": ["–ú–æ—Ö–∏—Ç–æ - 400 —Ä—É–±.", "–í–∏–Ω–æ Merlot - 1200 —Ä—É–±./–±–æ–∫–∞–ª"],
}

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_state = {}


# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å 10:00 –¥–æ 20:00 (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç)
def get_time_slots():
    return [f"{hour:02d}:{minute:02d}" for hour in range(10, 20) for minute in (0, 30)]


# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –Ω–∞ –º–µ—Å—è—Ü –≤–ø–µ—Ä–µ–¥
def get_available_dates():
    today = datetime.today()
    return [(today + timedelta(days=i)).strftime("%d.%m.%Y") for i in range(30)]


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: CallbackContext):
    buttons = [
        ["üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫"],
        ["üìú –ú–µ–Ω—é"],
        ["üè† –û –Ω–∞—Å"],
        ["üõé –í—ã–∑–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª"],
    ]
    keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Gourmet Haven!", reply_markup=keyboard
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫"
async def book_table(update: Update, context: CallbackContext):
    user_state[update.message.chat_id] = {}  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    buttons = [["–°–µ–≥–æ–¥–Ω—è"], ["–ó–∞–≤—Ç—Ä–∞"], ["–î—Ä—É–≥–æ–π –¥–µ–Ω—å"], ["üîô –ù–∞–∑–∞–¥"]]
    keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
async def choose_date(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    text = update.message.text

    if text == "–°–µ–≥–æ–¥–Ω—è":
        user_state[chat_id]["date"] = datetime.today().strftime("%d.%m.%Y")
    elif text == "–ó–∞–≤—Ç—Ä–∞":
        user_state[chat_id]["date"] = (datetime.today() + timedelta(days=1)).strftime(
            "%d.%m.%Y"
        )
    elif text == "–î—Ä—É–≥–æ–π –¥–µ–Ω—å":
        buttons = [[date] for date in get_available_dates()[:7]] + [["üîô –ù–∞–∑–∞–¥"]]
        keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:", reply_markup=keyboard)
        return

    buttons = [[time] for time in get_time_slots()] + [["üîô –ù–∞–∑–∞–¥"]]
    keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
async def choose_time(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    time = update.message.text

    if time == "üîô –ù–∞–∑–∞–¥":
        await book_table(update, context)
        return

    if time not in get_time_slots():
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è!")
        return

    user_state[chat_id]["time"] = time
    date = user_state[chat_id]["date"]

    await update.message.reply_text(
        f"‚úÖ –í–∞—à —Å—Ç–æ–ª–∏–∫ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ *{date}* –≤ *{time}*.\n"
        "–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ –æ—Ç –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏. "
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ *Gourmet Haven*!",
        parse_mode="Markdown",
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: CallbackContext):
    text = update.message.text
    chat_id = update.message.chat_id

    if text == "üìú –ú–µ–Ω—é":
        for category, items in menu.items():
            await update.message.reply_text(f"{category}:\n" + "\n".join(items))
    elif text == "üè† –û –Ω–∞—Å":
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω Gourmet Haven!\n–ê–¥—Ä–µ—Å: —É–ª. –ì–ª–∞–≤–Ω–∞—è, 15\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX"
        )
    elif text == "üõé –í—ã–∑–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª":
        await update.message.reply_text("–°–µ–π—á–∞—Å –ø–æ–∑–æ–≤–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª!")
    elif text == "üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫":
        await book_table(update, context)
    elif text in ["–°–µ–≥–æ–¥–Ω—è", "–ó–∞–≤—Ç—Ä–∞", "–î—Ä—É–≥–æ–π –¥–µ–Ω—å"]:
        await choose_date(update, context)
    elif text in get_time_slots():
        await choose_time(update, context)
    elif text in get_available_dates():
        user_state[chat_id]["date"] = text
        buttons = [[time] for time in get_time_slots()] + [["üîô –ù–∞–∑–∞–¥"]]
        keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", reply_markup=keyboard)
    elif text == "üîô –ù–∞–∑–∞–¥":
        await start(update, context)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = (
    Application.builder()
    .token("7338617614:AAExMLzMaFRW-rlHFc3FG8o2dWtReEm-7S8")
    .build()
)

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app.run_polling()
